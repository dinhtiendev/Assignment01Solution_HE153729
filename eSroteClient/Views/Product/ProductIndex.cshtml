@model IEnumerable<BussinessObject.ProductDto>

@{
    var productsJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
}

<div class="container p-4 border">
    <div class="row pb-2">
        <div class="col">
            <h1 class="text-primary">Products List</h1>
        </div>
        <div class="col text-end pt-1">
            <a asp-action="ProductCreate" class="btn btn-outline-primary">Create New Product</a>
        </div>
    </div>
    <div class="row pb-2">
        <div class="col">
            <input type="number" name="MinPrice" class="form-control" placeholder="MinPrice" oninput="filterProducts()" />
            <div class="text-center">To</div>
            <input type="number" name="MaxPrice" class="form-control" placeholder="MaxPrice" oninput="filterProducts()" />
        </div>
        <div class="col">
        </div>
        <div class="col">
        </div>
        <div class="col">
        </div>
        <div class="col text-end pt-1">
            <input type="text" name="ProductName" class="form-control" placeholder="ProductName" oninput="filterProducts()" />
        </div>
    </div>
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Name
                </th>
                <th>
                    Category Name
                </th>
                <th>
                    Weight
                </th>
                <th>
                    Unit Price
                </th>
                <th>
                    Unit In Stock
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody id="product">
            @foreach (var product in Model)
            {
                <tr>
                    <td>
                        @product.ProductId
                    </td>
                    <td>
                        @product.ProductName
                    </td>
                    <td>
                        @product.CategoryId
                    </td>
                    <td>
                        @product.Weight
                    </td>
                    <td>
                        @product.UnitPrice
                    </td>
                    <td>
                        @product.UnitsInStock
                    </td>
                    <td>
                        <a asp-action="ProductEdit" class="btn btn-success" asp-route-productId="@product.ProductId">
                            Edit
                        </a>
                        <a asp-action="ProductDelete" class="btn btn-danger" asp-route-productId="@product.ProductId">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    var products = @Html.Raw(productsJson);

    function filterProducts() {
        var productNameInput = document.getElementsByName('ProductName')[0];
        var searchTerm = productNameInput.value.toLowerCase();

        var minPriceInput = document.getElementsByName('MinPrice')[0];
        var searchMinPrice = minPriceInput.value;
        var maxPriceInput = document.getElementsByName('MaxPrice')[0];
        var searchMaxPrice = maxPriceInput.value;
        var filteredProducts = products.filter(function (product) {
            var productName = product.ProductName.toLowerCase();
            var productPrice = product.UnitPrice;

            var matchName = productName.includes(searchTerm);
            var matchPrice = true;
            if (searchMinPrice && searchMaxPrice) {
                matchPrice = productPrice >= searchMinPrice && productPrice <= searchMaxPrice;
            } else if (searchMinPrice) {
                matchPrice = productPrice >= searchMinPrice;
            } else if (searchMaxPrice) {
                matchPrice = productPrice <= searchMaxPrice;
            }
            return matchName && matchPrice;
        });

        displayFilteredProducts(filteredProducts);
    }

    function displayFilteredProducts(filteredProducts) {
        var tbody = document.querySelector('#product');

        tbody.innerHTML = '';

        filteredProducts.forEach(function (product) {
            var row = document.createElement('tr');

            var productIdCell = document.createElement('td');
            productIdCell.textContent = product.ProductId;
            row.appendChild(productIdCell);

            var productNameCell = document.createElement('td');
            productNameCell.textContent = product.ProductName;
            row.appendChild(productNameCell);

            var categoryIdCell = document.createElement('td');
            categoryIdCell.textContent = product.CategoryId;
            row.appendChild(categoryIdCell);

            var weightCell = document.createElement('td');
            weightCell.textContent = product.Weight;
            row.appendChild(weightCell);

            var unitPriceCell = document.createElement('td');
            unitPriceCell.textContent = product.UnitPrice;
            row.appendChild(unitPriceCell);

            var unitsInStockCell = document.createElement('td');
            unitsInStockCell.textContent = product.UnitsInStock;
            row.appendChild(unitsInStockCell);

            var actionCell = document.createElement('td');

            var editLink = document.createElement('a');
            editLink.className = 'btn btn-success';
            editLink.href = '/ProductEdit?productId=' + product.ProductId;
            editLink.textContent = 'Edit';
            actionCell.appendChild(editLink);

            var deleteLink = document.createElement('a');
            deleteLink.className = 'btn btn-danger';
            deleteLink.href = '/ProductDelete?productId=' + product.ProductId;
            deleteLink.textContent = 'Delete';
            actionCell.appendChild(deleteLink);

            row.appendChild(actionCell);

            tbody.appendChild(row);
        });
    }
</script>